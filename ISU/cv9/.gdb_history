b 20
r
quit
b 54
r
si
q
b 50
r
si
q
b 50
r
si
q
b 103
r
si
q
b 103
r
si
si
q
b 123
r
si
q
b 103
r
si
e
r
si
p [$esi + $ecx * 2]
p $esi
p [$esi]
p *$esi
p $ecx
p *($esi + 120
p *($esi + 12)
si
clear
r
si
p *($esi + $ecx * 2)
p *($esi)
p *($esi+2)
p *($esi+4
p *($esi+4)
p *($esi+6)
p short *($esi+6)
p (short) *($esi+6)
p (short) *($esi+4)
p $edi
p short *($esi + $ecx * 2)
p (short) *($esi + $ecx * 2)
si
si
si
p (short) *($esi + $ecx * 2)
p (short) *($esi + $ecx * 2 - 2)
p (short) *($edi)
p (short) $edi
q
b 103
r
si
q
b 103
r
si
r
si
make
r
si
r
si
make
r
si
make
r
si
r
si
make
r
si
q
b 103
r
si
r
si
make
r
si
q
b 27
r
make
make
make
make
make
make
clear
y
q
q
b 196
r
si
ni
r
si
ni
si
p (int *) $eax
p (int *) $eax[1]
p (int *) $eax[0]
p  $eax[0]
p $eax[0]
p *(eax)
p *($eax)
make
r
si
ni
si
p *($eax)
p *($eax + 2)
si
p *($eax + 2)
p *($eax + $)
p *($eax + 4)
p *($eax + 8)
p *($eax)
p *($eax + 4)
p *($eax + 8)
p *($eax + 8ma)
make
clear
make
r
si
ni
si
p *($eax)
p *($eax + 2)
p *($eax + 4)
p *($eax + 8)
si
si
si
si
p *($eax + 12)
make
r
si
ni
si
p *($eax + 2)
p *($eax + ))
p *($eax + $)
p *($eax + $)
p *($eax + 4)
p *($eax + 8)
p *($eax + 12)
si
p *($eax + 16)
si
q
